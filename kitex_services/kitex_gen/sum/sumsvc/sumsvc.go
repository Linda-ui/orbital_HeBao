// Code generated by Kitex v0.5.2. DO NOT EDIT.

package sumsvc

import (
	sum "github.com/Linda-ui/orbital_HeBao/kitex_services/kitex_gen/sum"
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
)

func serviceInfo() *kitex.ServiceInfo {
	return sumSvcServiceInfo
}

var sumSvcServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "SumSvc"
	handlerType := (*sum.SumSvc)(nil)
	methods := map[string]kitex.MethodInfo{
		"SumMethod": kitex.NewMethodInfo(sumMethodHandler, newSumSvcSumMethodArgs, newSumSvcSumMethodResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "sum",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.5.2",
		Extra:           extra,
	}
	return svcInfo
}

func sumMethodHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*sum.SumSvcSumMethodArgs)
	realResult := result.(*sum.SumSvcSumMethodResult)
	success, err := handler.(sum.SumSvc).SumMethod(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newSumSvcSumMethodArgs() interface{} {
	return sum.NewSumSvcSumMethodArgs()
}

func newSumSvcSumMethodResult() interface{} {
	return sum.NewSumSvcSumMethodResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) SumMethod(ctx context.Context, req *sum.SumReq) (r *sum.SumResp, err error) {
	var _args sum.SumSvcSumMethodArgs
	_args.Req = req
	var _result sum.SumSvcSumMethodResult
	if err = p.c.Call(ctx, "SumMethod", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
