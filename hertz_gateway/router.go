// Code generated by hertz generator.

package main

import (
	"context"
	"net/http"

	"github.com/Linda-ui/orbital_HeBao/hertz_gateway/biz/handler"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	"github.com/cloudwego/kitex/client"
	"github.com/kitex-contrib/registry-nacos/resolver"
)

func customizedRegister(r *server.Hertz) {
	r.GET("/ping", handler.Ping)

	r.GET("/", func(ctx context.Context, c *app.RequestContext) {
		c.JSON(http.StatusOK, "the api gateway is running")
	})

	registerGateway(r)
}

// registerGateway registers the router of gateway
func registerGateway(r *server.Hertz) {
	group := r.Group("/gateway")

	idlPath := "./idl/"

	nacosResolver, err := resolver.NewDefaultNacosResolver()
	if err != nil {
		hlog.Fatalf("err:%v", err)
	}

	handler.SvcMap.AddAll(
		idlPath,
		client.WithResolver(nacosResolver),
	)

	group.POST("/:svc/:method", handler.Gateway)
}
